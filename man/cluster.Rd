% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster.R
\name{start_cluster}
\alias{start_cluster}
\alias{clean_cluster}
\alias{stop_cluster}
\title{Parallelise multiple file transfers in the background}
\usage{
start_cluster(max_concurrent_transfers = 10, restart = FALSE)

clean_cluster()

stop_cluster()
}
\arguments{
\item{max_concurrent_transfers}{The maximum number of concurrent file transfers to support, which translates into the number of background R processes to create. Each concurrent transfer requires a separate R process, so limit this is you are low on memory.}

\item{restart}{For \code{start_cluster}, whether to terminate an already running cluster first. If this is FALSE (the default) and a cluster exists, the function does nothing.}
}
\description{
Parallelise multiple file transfers in the background
}
\details{
AzureStor can parallelise transferring files by deploying a cluster of R processes in the background. This can lead to significant speedups when transferring multiple small files. The cluster is deployed the first time that a multiple file transfer is begun, and remains persistent for the session or until terminated by \code{stop_cluster}.

\code{start_cluster} starts a cluster, or restarts an existing one if a cluster is already running. \code{clean_cluster} removes any artifacts from previous file transfers; it is called by the multiupload/download functions. \code{stop_cluster} terminates the cluster, freeing the memory used.
}
